41. 缺失的第一个正数
思路：缺失的第一个正数必然是 1-length+1
因此使用一个映射表来统计，这里采用了数组来实现。
//常数空间，使用数组原本的空间
//0--1, n---n+1,这样对应，如果不存在n + 2(length + 1),n=length - 1
//nums[n] <= 0 || nums[n] > nums.length  无法交换
//不必交换,已经存在---nums[n] = nums[nums[n] - 1]
//不必交换，正好相等	else n++;
class Solution {
    public int firstMissingPositive(int[] nums) {
        if(nums == null || nums.length == 0) return 1;
        int n = 0;
        while(n < nums.length)
        {
            if(nums[n] != n + 1)
            {
                if(nums[n] <= 0 || nums[n] > nums.length) n++;
                else
                {
                    if(nums[n] == nums[nums[n] - 1]) 
                    {
                        n++;
                        continue;
                    }
                    int temp = 0;
                    temp = nums[nums[n] - 1];
                    nums[nums[n] - 1] = nums[n];
                    nums[n] = temp;
                }
            }
            else
                n++;
        }
        for(int i = 0;i<nums.length;i++)
        {
            if(nums[i] != i + 1)
                return i + 1;
        }
        return nums.length + 1;
    }
}

O(n),O(n)
哈希表法---即为数组