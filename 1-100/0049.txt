49. 字母异位词分组
对每个词都进行排列，然后以排列后的词为key作为hashmap的key,value为对应的key的string的集合。
class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> res = new ArrayList<>();
        if(strs == null || strs.length == 0) return res;
        HashMap<String,ArrayList<String>> map = new HashMap<>();
        for(int i = 0; i < strs.length;i++)
        {
            String temp = help(strs[i]);
            if(map.containsKey(temp) == false)
            {
                map.put(temp,new ArrayList<>());
                map.get(temp).add(strs[i]);
            }
            else
            {
                map.get(temp).add(strs[i]);
            }
        }
        Set<String> set = map.keySet();
        for(String s:set)
        {
            res.add(map.get(s));
        }
        return res;
    }

    public String help(String s)
    {
        char[] carray = s.toCharArray();
        Arrays.sort(carray);
        return new String(carray);
    }
}